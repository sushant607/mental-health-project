.checkbox-wrapper-31:hover .check {
  stroke-dashoffset: 0;
}

.checkbox-wrapper-31 {
  position: relative;
  display: inline-block;
  width: 20px;
  height: 20px;
}

.checkbox-wrapper-31 .background {
  fill: #ccc;
  transition: ease all 0.6s;
  -webkit-transition: ease all 0.6s;
  
}

.checkbox-wrapper-31 .stroke {
  fill: none;
  stroke: #fff;
  stroke-miterlimit: 10;
  stroke-width: 2px;
  stroke-dashoffset: 100;
  stroke-dasharray: 100;
  transition: ease all 0.6s;
  -webkit-transition: ease all 0.6s;
}

.checkbox-wrapper-31 .check {
  fill: none;
  stroke: #fff;
  stroke-linecap: round;
  stroke-linejoin: round;
  stroke-width: 2px;
  stroke-dashoffset: 22;
  stroke-dasharray: 22;
  transition: ease all 0.6s;
  -webkit-transition: ease all 0.6s;
}

.checkbox-wrapper-31 input[type=checkbox] {
  position: absolute;
  width: 100%;
  height: 100%;
  left: 0;
  top: 0;
  margin: 0;
  opacity: 0;
  -appearance: none;
  -webkit-appearance: none;
}

.checkbox-wrapper-31 input[type=checkbox]:hover {
  cursor: pointer;
}

.checkbox-wrapper-31 input[type=checkbox]:checked + svg .background {
  fill: #6cbe45;
}

.checkbox-wrapper-31 input[type=checkbox]:checked + svg .stroke {
  stroke-dashoffset: 0;
}

.checkbox-wrapper-31 input[type=checkbox]:checked + svg .check {
  stroke-dashoffset: 0;
}
body{
  background-color: #40A2E3;
}
 .card1 {
  position: relative;
  width: 500px;
  height: 350px;
  border-radius: 14px;
  margin: auto;
  background-color: #FFF6E9;
  z-index: 1111;
  overflow: hidden;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
 }
 .button2 {
  width: 9em;
  height: 3em;
  border-radius: 30em;
  font-size: 15px;
  font-family: inherit;
  border: none;
  position: relative;
  overflow: hidden;
  z-index: 1;
  box-shadow: 6px 6px 12px #c5c5c5,
              -6px -6px 12px #ffffff;
 }
 
 .button2::before {
  content: '';
  width: 0;
  height: 3em;
  border-radius: 30em;
  position: absolute;
  top: 0;
  left: 0;
  background-image: linear-gradient(to right, #0fd850 0%, #f9f047 100%);
  transition: .5s ease;
  display: block;
  z-index: -1;
 }
 
 .button2:hover::before {
  width: 9em;
 }

 @import compass


 // n is number of stars required
 @function multiple-box-shadow ($n) 
   $value: '#{random(2000)}px #{random(2000)}px #FFF'
   @for $i from 2 through $n
     $value: '#{$value} , #{random(2000)}px #{random(2000)}px #FFF'
 
   @return unquote($value)
 
 $shadows-small:  multiple-box-shadow(700)
 $shadows-medium: multiple-box-shadow(200)
 $shadows-big:    multiple-box-shadow(100)
 
 html
   height: 100%
   background: radial-gradient(ellipse at bottom, #1B2735 0%, #090A0F 100%)
   overflow: hidden
     
 #stars
   width: 1px
   height: 1px
   background: transparent
   box-shadow: $shadows-small
   animation			: animStar 50s linear infinite
     
   &:after
     content: " "
     position: absolute
     top: 2000px
     width: 1px
     height: 1px
     background: transparent
     box-shadow: $shadows-small
     
 #stars2
   width: 2px
   height: 2px
   background: transparent
   box-shadow: $shadows-medium
   animation			: animStar 100s linear infinite
     
   &:after
     content: " "
     position: absolute
     top: 2000px
     width: 2px
     height: 2px
     background: transparent
     box-shadow: $shadows-medium
     
 #stars3
   width: 3px
   height: 3px
   background: transparent
   box-shadow: $shadows-big
   animation			: animStar 150s linear infinite
     
   &:after
     content: " "
     position: absolute
     top: 2000px
     width: 3px
     height: 3px
     background: transparent
     box-shadow: $shadows-big
 
 #title
   position: absolute
   top: 50%
   left: 0
   right: 0
   
   color: #FFF
   text-align: center
   font-family: 'lato',sans-serif
   font-weight: 300
   font-size: 50px
   letter-spacing: 10px
   
   margin-top: -60px
   padding-left: 10px
   
   span
     background: -webkit-linear-gradient(white, #38495a)
     -webkit-background-clip: text
     -webkit-text-fill-color: transparent
     
 @keyframes animStar
   from	
     transform: translateY(0px)
   to		
     transform: translateY(-2000px)
     